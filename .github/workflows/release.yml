name: Build and Release C14

on:
  push:
    branches:
      - rust

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build release
        run: |
          set -x
          ls -la
          cargo build --release
          echo "Build done"

      - name: Get version from Cargo.toml
        id: get_version
        run: |
          version=$(grep '^version' Cargo.toml | head -n1 | cut -d '"' -f2)
          echo "Version : $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Upload binaire
        uses: actions/upload-artifact@v4
        with:
          name: c14
          path: ./target/release/c14

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          files: target/release/c14
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  apt:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential devscripts debhelper dput gnupg2

      - name: Import GPG private key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          gpg --list-keys

      - name: Build source package
        run: |
          mkdir -p debian
          dch --create --package c14 --newversion ${{ needs.build.outputs.version }}-1 --distribution focal "Version ${{ needs.job1.outputs.version }}"
          debuild -S -sa

      - name: Setup SSH for Launchpad
        env:
          LAUNCHPAD_SSH_KEY: ${{ secrets.LAUNCHPAD_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$LAUNCHPAD_SSH_KEY" > ~/.ssh/id_launchpad
          chmod 600 ~/.ssh/id_launchpad
          ssh-keyscan -t ed25519 ppa.launchpad.net >> ~/.ssh/known_hosts

      - name: Configure dput
        run: |
          cat > ~/.dput.cf <<EOF
          [ppa]
          fqdn = ppa.launchpad.net
          method = sftp
          login = elwaaaah
          incoming = ~elwaaaah/ubuntu/c14
          ssh_config_options = -i ~/.ssh/id_launchpad
          EOF

      - name: Upload source package to Launchpad PPA
        run: dput ppa ../*.changes